?write.csv
head(oxxo_base[with(oxxo_base, order(entidad,municipio)),])
head(oxxo_base[with(oxxo_base, order(entidad,municipio)),c(28:33,40,41)])
oxxo <- oxxo_base[with(oxxo_base, order(entidad,municipio)),c(28:33,40,41)]
head(oxxo)
rownames(oxxo) <- NULL
head(oxxo)
tail(oxxo)
write.csv(oxxo,'/Volumes/ADATA HD/2024-30daymapchallenge/03-polygons/csv/oxxos.csv')
install.packages('vegan')
library(vegan)#
#
pca1 <- rda(iris[,-5])  # pca of iris data#
pca2 <- rda(iris[,-5],scale=TRUE)#
#
punt1 <- scores(pca1)#
punt2 <- scores(pca2)
?biplot(())
?biplot
pca1
summary(pca1)
str(pca1)
?rda
pca1$Ybar
pca1
summary(pca1)
str(pca1)
pca1$u
pca1$CA
pca1$CA$u
ggplot(pca1$CA$u[,1:2],aes(x=PC1,y=PC2)) +#
	geompoint(color='red')
library(vegan)#
library(ggplot2)
pca1 <- rda(iris[,-5])  # pca of iris data#
pca2 <- rda(iris[,-5],scale=TRUE)#
#
punt1 <- scores(pca1)#
punt2 <- scores(pca2)#
#
ggplot(pca1$CA$u[,1:2],aes(x=PC1,y=PC2)) +#
	geompoint(color='red')
ggplot(pca1$CA$u[,1:2],aes(x=PC1,y=PC2)) +#
	geom_point(color='red')
str(pca1)
pca1$CA$v
punt1
pca1$CA$v
str(pca1)
?rda
?score
?scores
plot(pca1)
pca1$colsum
pca1$Ybar
plot(pca1)
str(pca1)
pca1$CA
?biplot
pca1$CA$v
plot(pca1)
biplot(pca1)
thing <- biplot(pca1)
str(thing)
pca1$Ybar
?rda
scores(rda)
scores(pca1)
pca1$CA$u[1:10,]
biplot.rda
biplot
scores
punt1
punt1[1:10,]
punt1$sites[1:10,]
plot(punt1$sites)
points(pca1$CA$u[,1:2])
plot(punt1$sites)
points(scale(pca1$CA$u[,1:2]))
biplot(pca1)
points(scale(pca1$CA$u[,1:2]))
biplot(pca1)
thing
thing <- biplot(pca1)
str(thing)
scores(pca1)
str(scores(pca1))
?biplot
ggplot(punt1$sites,aes(x=PC1,y=PC2)) +#
	geom_point(color='red')
biplot(pca1)
ggplot(punt1$sites,aes(x=PC1,y=PC2)) +#
	geom_point(color='red')
?geom_segment
ggplot(punt1$sites,aes(x=PC1,y=PC2)) +#
	geom_point(color='red') + #
	geom_segment(data=punt1$species,arrow=arrow())
?geom_segment
punt1$species
ggplot(punt1$sites,aes(x=PC1,y=PC2)) +#
	geom_point(color='red') + #
	geom_segment(data=punt1$species,#
				 aes(x=0,y=0,xend=PC1,yend=PC2),#
				 arrow=arrow())
ggplot(sites1,aes(x=PC1,y=PC2)) +#
	geom_point(color='red') + #
	geom_segment(data=species1,#
				 aes(x=0,y=0,xend=PC1,yend=PC2),#
				 arrow=arrow()) +#
	annotate('text',x=species1[,1],y=species1[,2],label=rownames(species1))
pca1     <- rda(iris[,-5])  # pca of iris data#
pca2     <- rda(iris[,-5],scale=TRUE)#
#
punt1    <- scores(pca1)#
punt2    <- scores(pca2)#
#
sites1   <- punt1$sites#
sites2   <- punt2$sites#
#
species1 <- punt1$species#
species2 <- punt2$species
ggplot(sites1,aes(x=PC1,y=PC2)) +#
	geom_point(color='red') + #
	geom_segment(data=species1,#
				 aes(x=0,y=0,xend=PC1,yend=PC2),#
				 arrow=arrow()) +#
	annotate('text',x=species1[,1],y=species1[,2],label=rownames(species1))
ggplot(sites1,aes(x=PC1,y=PC2)) +#
	geom_point(color='red') + #
	geom_segment(data=species1,#
				 aes(x=0,y=0,xend=PC1,yend=PC2),#
				 arrow=arrow(),#
				 color='blue') +#
	annotate('text',#
			 x=species1[,1],#
			 y=species1[,2],#
			 label=rownames(species1))
plot1 <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1))
plot1
plot1 <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1)) +#
			 labs(title='Principal Component Analysis')#
plot1
?ggarrange()
?ggarrange
??ggarrange
library(vegan)#
library(ggplot2)#
library(ggpubr)
??ggarrange
install.packages(ggpubr)
install.packages('ggpubr')
library(vegan)#
library(ggplot2)#
library(ggpubr)
?rda()
plot1 <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1)) +#
			 labs(title='PCA, raw data')#
plot2 <- ggplot(sites2,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species2,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species2[,1],#
			 		  y=species2[,2],#
			 		  label=rownames(species2)) +#
			 labs(title='PCA, scaled data to variance=1')#
figure <- ggarrange(plot1,plot2,labels=c('a)','b)'),ncol=2,nrow=1)#
figure
plot1 <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1)) +#
			 labs(title='PCA, raw data')#
plot2 <- ggplot(sites2,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species2,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species2[,1],#
			 		  y=species2[,2],#
			 		  label=rownames(species2)) +#
			 labs(title='PCA, scaled data to variance=1')#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
plot1 <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1)) +#
			 labs(title='PCA, raw data')#
plot2 <- ggplot(sites2,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species2,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species2[,1],#
			 		  y=species2[,2],#
			 		  label=rownames(species2)) +#
			 labs(title='PCA, scaled data to unit variance')#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
plotpca <- function(sites,species) {#
	plotf <- ggplot(sites1,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species1,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species1[,1],#
			 		  y=species1[,2],#
			 		  label=rownames(species1)) +#
			 labs(title='Principal Component Analysis')#
	return (plotf)#
}
plot1 <- plotpca(sites1,species1)#
plot1
plot1 <- plotpca(sites1,species1)#
plot2 <- plotpca(sites2,species2)#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
plotpca <- function(sites,species) {#
	plotf <- ggplot(sites,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species[,1],#
			 		  y=species[,2],#
			 		  label=rownames(species)) +#
			 labs(title='Principal Component Analysis')#
	return (plotf)#
}
plot1 <- plotpca(sites1,species1)#
plot1
plot1 <- plotpca(sites1,species1)#
plot2 <- plotpca(sites2,species2)#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
plotpca <- function(sites,species) {#
	plotf <- ggplot(sites,aes(x=PC1,y=PC2)) + #
			 geom_point(color='red') + #
			 geom_segment(data=species,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='blue') + #
			 annotate('text',#
			 		  x=species[,1],#
			 		  y=species[,2],#
			 		  label=rownames(species))#
	return (plotf)#
}
plot1 <- plotpca(sites1,species1) + labs(title='Principal Component Analysis')#
plot1
plot1 <- plotpca(sites1,species1) + labs(title='PCA, original data')#
plot2 <- plotpca(sites2,species2) + labs(title='PCA, data scaled to unit variance')#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
super <- read.delim('./stats-data/superficiales')
super <- read.delim('./stats-data/superficiales.csv')
super <- read.delim('~/stats-data/superficiales.csv')
super <- read.delim('~/Documents/barroso-stats/stats-data/superficiales.csv')
head(super)
super <- read.csv('~/Documents/barroso-stats/stats-data/superficiales.csv')
head(super)
unique(super$sector)
dim(super)
super
super <- read.csv('~/Documents/barroso-stats/stats-data/superficiales.csv')#
#
pca3     <- rda(super[,3:13])#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
pca3     <- rda(super[,4:13])#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
pca3     <- rda(super[,5:13])#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
pca3     <- rda(super[,5:13],scale=T)#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
pca3     <- rda(super[,3:13],scale=T)#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
plotpca <- function(sites,species) {#
	plotf <- ggplot(sites,aes(x=PC1,y=PC2)) + #
			 geom_point(color='black') + #
			 geom_segment(data=species,#
			 			  aes(x=0,y=0,xend=PC1,yend=PC2),#
			 			  arrow=arrow(),#
			 			  color='red') + #
			 annotate('text',#
			 		  x=species[,1],#
			 		  y=species[,2],#
			 		  label=rownames(species),color='blue')#
	return (plotf)#
}
plot1 <- plotpca(sites1,species1) + labs(title='Principal Component Analysis')#
plot1
plot1 <- plotpca(sites1,species1) + labs(title='PCA, original data')#
plot2 <- plotpca(sites2,species2) + labs(title='PCA, data scaled to unit variance')#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
super <- read.csv('~/Documents/barroso-stats/stats-data/superficiales.csv')#
#
pca3     <- rda(super[,3:13],scale=T)#
punt3    <- scores(pca3)#
sites3   <- punt3$sites#
species3 <- punt3$species#
#
plotpca(sites3,species3)
plot1 <- plotpca(sites1,species1) + labs(title='PCA, original data')#
plot2 <- plotpca(sites2,species2) + labs(title='PCA, data scaled to unit variance')#
figure <- ggarrange(plot1,plot2,ncol=2,nrow=1)#
figure
library(jsonlite)
library(nparcomp)
hvsrtodo <- read_json('/Users/roberto/Documents/barroso-stats/hvsr_colima_24h.json')
dias <- hvsrtodo$day[1:352]
frecs <- hvsrtodo$day[1:352]
dias[182]
dias[183]
dias_pre[183]
dias_pre <- dias[183:]
dias_pre <- dias[1:182]
dias_post <- dias[183:352]
frecs_pre <- frecs[1:182]
frecs_post <- frecs[183:352]
dias
dias <- as.numeric(hvsrtodo$day[1:352])
frecs <- as.numeric(hvsrtodo$day[1:352])
dias_pre <- dias[1:182]
dias_post <- dias[183:352]
frecs_pre <- frecs[1:182]
frecs_post <- frecs[183:352]
dias_pre
dias_post
dias_pre <- dias[1:181]
dias_post <- dias[182:352]
frecs_pre <- frecs[1:181]
frecs_post <- frecs[182:352]
dens_pre <- density(frecs_pre)
dens_post <- density(frecs_pre)
dens_post <- density(frecs_post)
plot(d,lwd=2)
plot(dens_pre,lwd=2)
line(dens_post)
lines(dens_post)
frecs_pre
frecs <- as.numeric(hvsrtodo$f0_freq_bis[1:352])
frecs_pre <- frecs[1:181]
frecs_post <- frecs[182:352]
dens_pre <- density(frecs_pre)
dens_post <- density(frecs_post)
plot(dens_pre,lwd=2)
lines(dens_post)
dens_pre
str(dens_pre)
df <- (dens_pre$x,dens_pre$y,dens_post$x,dens_post$y)
df <- data.frame(dens_pre$x,dens_pre$y,dens_post$x,dens_post$y)
df
head(df)
df <- data.frame(fpre=dens_pre$x,dpre=dens_pre$y,fpost=dens_post$x,dpost=dens_post$y)
head(df)
write_csv(df,'/Users/roberto/Documents/barroso-stats/hvsrdensitykernels.csv')
write.csv(df,'/Users/roberto/Documents/barroso-stats/hvsrdensitykernels.csv')
plot(dens_pre,lwd=2)
lines(dens_post)
wilcox.test(frecs_pre,frecs_post)
w <- wilcox.test(frecs_pre,frecs_post)
str(w)
w$p.value
setwd('/Users/roberto/Documents/stats-final-project')#
#
library(geodata)#
library(ggplot2)#
library(sf)#
library(dplyr)
plims <- function(x,p=0.1) {#
	# limits of plot axis#
	# x - numeric#
	# p - percentage (from 0 to 1) of padding#
	maxval <- max(x)#
	minval <- min(x)#
	span   <- maxval-minval#
	lim_hi <- maxval + 0.5 * p * span#
	lim_lo <- minval - 0.5 * p * span#
	return (c(lim_lo,lim_hi))#
}#
#
magsize <- function(x) {#
	# for plot#
	# x - list of magnitudes#
	mags = 1:length(x)#
	for (i in 1:length(x)) {#
		mag = x[i]#
		if (mag <= 3) {#
			mags[i] = 1#
		}#
		else if (mag <= 5) {#
			mags[i] = 2#
		}#
		else if (mag <= 7) {#
			mags[i] = 3#
		}#
		else {#
			mags[i] = 4#
		}		#
	}#
	return (mags)#
}
sismos <- read.csv("catalogo_sismos.csv",skip=4)[-(294776:294782),] %>%#
          filter(Magnitud != 'no calculable')#
sismos$utc <- paste(sismos$Fecha.UTC,sismos$Hora.UTC) %>% #
              strptime('%Y-%m-%d %H:%M:%S') %>%#
              as.POSIXct(tz = 'UTC')
bckgnd_countries = c('US','GT','BZ','SV','HN','NI','CR','PA')#
bckgnd <- do.call('rbind',lapply(bckgnd_countries,#
                  function(x) gadm(country=x,level=0,resolution=2,#
                  path=getwd()))) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
mexico <- gadm(country='MX',level=1,resolution=2,path=getwd()) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
ev_pts <- st_as_sf(sismos, coords=c('Longitud','Latitud'), #
                   crs=st_crs('EPSG:6365'))
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Profundidad)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Magnitud)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
sismos$Magnitud <- as.numeric(sismos$Magnitud)
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Magnitud)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
# Reemplazar path por el preferido#
setwd('/Users/roberto/Documents/stats-final-project')#
#
library(geodata)#
library(ggplot2)#
library(sf)#
library(dplyr)#
#
######### ######### ######### ######### ######### ######### ######### ######### #
#
# Definiciones de funciones#
#
plims <- function(x,p=0.1) {#
	# limits of plot axis#
	# x - numeric#
	# p - percentage (from 0 to 1) of padding#
	maxval <- max(x)#
	minval <- min(x)#
	span   <- maxval-minval#
	lim_hi <- maxval + 0.5 * p * span#
	lim_lo <- minval - 0.5 * p * span#
	return (c(lim_lo,lim_hi))#
}#
#
magsize <- function(x) {#
	# for plot#
	# x - list of magnitudes#
	mags = 1:length(x)#
	for (i in 1:length(x)) {#
		mag = x[i]#
		if (mag <= 3) {#
			mags[i] = 1#
		}#
		else if (mag <= 5) {#
			mags[i] = 2#
		}#
		else if (mag <= 7) {#
			mags[i] = 3#
		}#
		else {#
			mags[i] = 4#
		}		#
	}#
	return (mags)#
}#
#
######### ######### ######### ######### ######### ######### ######### ######### #
#
######### ######### ######### ######### ######### ######### ######### ######### #
#
sismos <- read.csv("catalogo_sismos.csv",skip=4)[-(294776:294782),] %>%#
          filter(Magnitud != 'no calculable')#
sismos$utc <- paste(sismos$Fecha.UTC,sismos$Hora.UTC) %>% #
              strptime('%Y-%m-%d %H:%M:%S') %>%#
              as.POSIXct(tz = 'UTC')#
sismos$Magnitud <- as.numeric(sismos$Magnitud)#
#
######### ######### ######### ######### ######### ######### ######### ##########
#
bckgnd_countries = c('US','GT','BZ','SV','HN','NI','CR','PA')#
bckgnd <- do.call('rbind',lapply(bckgnd_countries,#
                  function(x) gadm(country=x,level=0,resolution=2,#
                  path=getwd()))) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
mexico <- gadm(country='MX',level=1,resolution=2,path=getwd()) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
ev_pts <- st_as_sf(sismos, coords=c('Longitud','Latitud'), #
                   crs=st_crs('EPSG:6365'))#
#
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Magnitud)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Magnitud)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Profundidad)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
sismitos <- sismos[sismos$Magnitud<1.2,]
sismitos
sismitos <- sismos[sismos$Magnitud<1.0,]
sismitos
cosa <- read_csv('catalogo_sismos.csv',skip=4)
cosa <- read.csv('catalogo_sismos.csv',skip=4)
tail(cosa,n=10L)
sismos <- read.csv("catalogo_sismos.csv",skip=4)[-(304906:304912),] %>%#
          filter(Magnitud != 'no calculable')#
sismos$utc <- paste(sismos$Fecha.UTC,sismos$Hora.UTC) %>% #
              strptime('%Y-%m-%d %H:%M:%S') %>%#
              as.POSIXct(tz = 'UTC')#
sismos$Magnitud <- as.numeric(sismos$Magnitud)
head(sismos)
20 * 10 ^ 2
20 * 10 ^ 3
20 * 10 ^ ((6-6)/2)
20 * 10 ^ ((5-6)/2)
20 * 10 ^ ((4-6)/2)
20 * 10 ^ ((3-6)/2)
20 * 10 ^ ((2-6)/2)
20 * 10 ^ ((1-6)/2)
20 * 10 ^ ((8-6)/2)
20 * 10 ^ (((1:4)-6)/2)
basemag <- seq(min(sismos$Magnitud),max(sismos$Magnitud),0.1)#
freq_events <- 1:length(basemag)#
for (i in 1:length(basemag)){#
	cutmag = basemag[i]#
	freq_events[i] = length(sismos$Magnitud[sismos$Magnitud>cutmag])#
}
plot(basemag,freq_events)
plot(basemag,freq_events,log='y')
?round
magfreqs <- function(m,mbin=0.1) {#
	# Generates data.frame of number of events against magnitude#
	# Input:#
	# m - list of magnitudes#
	# mbin - binning width (difference)#
	# Output:#
	# df$magnitude - #
	# df$amount - #
	mags <- seq(round(min(mags),digits=1),#
	            round(max(mags),digits=1),#
	            mbin)#
	amt <- 1:length(mags)#
	for (i in 1:length(mags)){#
		cutmag = mags[i]#
		amt[i] = length(m[m>cutmag])#
	}#
	df <- data.frame(magnitude=mags,amount=amt)#
	return (df)#
}
freqs <- magfreqs(sismos$Magnitud)
magfreqs <- function(m,mbin=0.1) {#
	# Generates data.frame of number of events against magnitude#
	# Input:#
	# m - list of magnitudes#
	# mbin - binning width (difference)#
	# Output:#
	# df$magnitude - #
	# df$amount - #
	mags = seq(round(min(mags),digits=1), round(max(mags),digits=1), mbin)#
	amt = 1:length(mags)#
	for (i in 1:length(mags)){#
		cutmag = mags[i]#
		amt[i] = length(m[m>cutmag])#
	}#
	df <- data.frame(magnitude=mags,amount=amt)#
	return (df)#
}
freqs <- magfreqs(sismos$Magnitud)
magfreqs <- function(m,mbin=0.1) {#
	# Generates data.frame of number of events against magnitude#
	# Input:#
	# m - list of magnitudes#
	# mbin - binning width (difference)#
	# Output:#
	# df$magnitude - #
	# df$amount - #
	mags = seq(round(min(m),digits=1), round(max(m),digits=1), mbin)#
	amt = 1:length(mags)#
	for (i in 1:length(mags)){#
		cutmag = mags[i]#
		amt[i] = length(m[m>cutmag])#
	}#
	df <- data.frame(magnitude=mags,amount=amt)#
	return (df)#
}
freqs <- magfreqs(sismos$Magnitud)
str(freqs)
plot(freqs,log='y')
magfreqs <- function(m,mbin=0.1) {#
	# Generates data.frame of number of events against magnitude#
	# Input:#
	# m - list of magnitudes#
	# mbin - binning width (difference)#
	# Output:#
	# df$magnitude - #
	# df$amount - #
	mags = seq(round(min(m),digits=1), round(max(m),digits=1), mbin)#
	amt = 1:length(mags)#
	for (i in 1:length(mags)){#
		cutmag = mags[i]#
		amt[i] = length(m[m>=cutmag])#
	}#
	df <- data.frame(magnitude=mags,amount=amt)#
	return (df)#
}
freqs <- magfreqs(sismos$Magnitud)
plot(freqs,log='y')
magfreqs <- function(m,mbin=0.1) {#
	# Generates data.frame of number of events against magnitude#
	# Input:#
	# m - list of magnitudes#
	# mbin - binning width (difference)#
	# Output:#
	# df$magnitude - #
	# df$amount - #
	mags = seq(round(min(m),digits=1), round(max(m),digits=1), mbin)#
	amt = 1:length(mags)#
	for (i in 1:length(mags)){#
		cutmag = mags[i]#
		amt[i] = length(m[m>cutmag])#
	}#
	df <- data.frame(magnitude=mags,amount=amt)#
	return (df)#
}
freqs <- magfreqs(sismos$Magnitud)
plot(freqs,log='y')
magfreqplot1 <- ggplot(freqs,aes(x=magnitude,y=amount)) +#
                geom_point() +#
                scale_y_continous(trans='log10')
magfreqplot1 <- ggplot(freqs,aes(x=magnitude,y=amount)) +#
                geom_point() +#
                scale_y_continuous(trans='log10')
magfreqplot1
magfreqplot1 <- ggplot(freqs,aes(x=magnitude,y=amount)) +#
                geom_point() +#
                scale_y_continuous(trans='log10',#
                    breaks=trans_breaks('log10', function(x) 10^x),#
                    labels=trans_format('log10', math_format(2^.x)))
library(geodata)#
library(ggplot2)#
library(sf)#
library(dplyr)#
library(scales)
freqs <- magfreqs(sismos$Magnitud)#
magfreqplot1 <- ggplot(freqs,aes(x=magnitude,y=amount)) +#
                geom_point() +#
                scale_y_continuous(trans='log10',#
                    breaks=trans_breaks('log10', function(x) 10^x),#
                    labels=trans_format('log10', math_format(2^.x)))
magfreqplot1
magfreqplot1 <- ggplot(freqs,aes(x=magnitude,y=amount)) +#
                geom_point() +#
                scale_y_continuous(trans='log10',#
                    breaks=trans_breaks('log10', function(x) 10^x),#
                    labels=trans_format('log10', math_format(10^.x)))#
magfreqplot1
10>=9
9>=9
8.9>=9
length(sismos_mc_hi$Magnitud)
# First step: taking into account completeness of catalog#
mc_bool = sismos$Magnitud >= 3.1#
sismos_mc_hi <- sismos[mc_bool]   # complete for older data
# First step: taking into account completeness of catalog#
mc_bool = sismos$Magnitud >= 3.1#
sismos_mc_hi <- sismos[mc_bool,]   # complete for older data
length(sismos_mc_hi$Magnitud)
bckgnd_countries = c('US','GT','BZ','SV','HN','NI','CR','PA')#
bckgnd <- do.call('rbind',lapply(bckgnd_countries,#
                  function(x) gadm(country=x,level=0,resolution=2,#
                  path=getwd()))) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
mexico <- gadm(country='MX',level=1,resolution=2,path=getwd()) %>%#
          st_as_sf(crs = st_crs('EPSG:6365'))#
ev_pts <- st_as_sf(sismos_mc_hi, coords=c('Longitud','Latitud'), #
                   crs=st_crs('EPSG:6365'))
magmap1 <- ggplot() +#
           geom_sf(data=bckgnd,fill='lightgrey',color='grey') +#
           geom_sf(data=mexico,fill='white',color='grey') +#
           geom_sf(data=ev_pts,alpha=0.2,#
                   aes(color=Profundidad)) +#
           coord_sf(xlim=plims(sismos$Longitud,p=-0.1),#
                    ylim=plims(sismos$Latitud,p=-0.1)) #
magmap1
